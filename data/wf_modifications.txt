1. The preparation of batches script (previously located at /bin/prepare_batches.R) has been updated. Rows without position information are now filtered out later in the process than before.
e.g susie_high_pip_with_gene <- data.frame(
  cs_id = c("A", "A", "A", "B", "B", "B", "C", "C"),
  pip = c(0.8, 0.5, 0.9, 0.6, 0.7, 0.4, 0.3, 0.2),
  position = c(100, 200, NA, 300, 400, NA, 500, NA)
)
highest_pip_vars_per_cs <- susie_high_pip_with_gene %>% 
  dplyr::group_by(cs_id) %>% 
  dplyr::arrange(-pip) %>% 
  dplyr::slice(1) %>% 
  dplyr::ungroup() %>% 
  dplyr::filter(!is.na(position)) yields: # A tibble: 2 × 3
  cs_id   pip position
  <chr> <dbl>    <dbl>
1 B       0.7      400
2 C       0.3      500

import polars as pl

data = {
    "cs_id": ["A", "A", "A", "B", "B", "B", "C", "C"],
    "pip": [0.8, 0.5, 0.9, 0.6, 0.7, 0.4, 0.3, 0.2],
    "position": [100, 200, None, 300, 400, None, 500, None],
}

df_credible_sets = pl.DataFrame(data)

highest_pip_vars_per_cs = (
    df_credible_sets
    .filter(pl.col("position").is_not_null())
    .sort(["cs_id", "pip"], descending=[False, True])
    .group_by("cs_id")
    .agg(pl.all().first())
) yields: shape: (3, 3)
┌───────┬─────┬──────────┐
│ cs_id ┆ pip ┆ position │
│ ---   ┆ --- ┆ ---      │
│ str   ┆ f64 ┆ i64      │
╞═══════╪═════╪══════════╡
│ B     ┆ 0.7 ┆ 400      │
│ A     ┆ 0.8 ┆ 100      │
│ C     ┆ 0.3 ┆ 500      │
└───────┴─────┴──────────┘

2. When the nom_exon_cc_sumstats_ss_oi variable is empty, a NULL value is passed to cdss to avoid errors during the wiggleplotr::extractCoverageData call:   coverage_data_list = tryCatch(wiggleplotr::extractCoverageData(exons = exons_to_plot, 
                                                                 cdss = exon_cdss_to_plot, # NULL?
                                                                 plot_fraction = 0.2,
                                                                 track_data = track_data_study), 
                                error = function(e) {
                                  message(" ## Problem with generating coverage_data wiggleplotr")
                                  message(e)
                                })
This is done to avoide the error:   index: 1, exon_phenotype_id: ENSG00000144711.16_3_12908349_12908525, variant: chr3_13075916_C_T
   ## Preparing Track Data
  Joining with `by = join_by(sample_id)`
  Error in stop_if_wrong_length("'seqnames'", ans_len) : 
    'seqnames' must have the length of the object to construct (1) or
    length 1
  Calls: <Anonymous> -> new_GRanges -> stop_if_wrong_length
  Execution halted
3. R scripts no longer generate tar-zipped files; instead, they create directories to eliminate the need for repacking during the sqlite file generation process.
4. Updated the leafcutter script to modify signal_name naming conventions by replacing "&" with "__", as the "&" symbol caused issues in bash.


TODO:
* Fix genotype_id names check and replacment in R scripts.
* Create small testdata for git repo.
